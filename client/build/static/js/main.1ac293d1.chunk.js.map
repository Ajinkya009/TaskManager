{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/projectReducer.js","reducers/taskReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","actions/projectActions.js","components/dashboard/Dashboard.js","actions/taskActions.js","components/project/Project.js","components/task/Task.js","actions/errorAction.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","all","currentProject","name","description","duration","tasks","_id","startDate","admin","__v","currentTask","endDate","status","assignee","combineReducers","auth","state","action","errors","projects","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","connect","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","className","AppBar","position","Toolbar","Typography","variant","to","style","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","e","preventDefault","Component","Register","onChange","setState","target","value","onSubmit","newUser","email","password","password2","registerUser","history","this","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","width","borderRadius","letterSpacing","marginTop","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","console","log","toast","POSITION","TOP_RIGHT","emailnotfound","passwordincorrect","body","setItem","jwt_decode","component","rest","render","setProjects","setCurrentProject","projectData","StyledTableCell","withStyles","head","backgroundColor","palette","white","fontSize","TableCell","StyledTableRow","background","default","TableRow","Swal","fire","html","inputAttributes","autocapitalize","preConfirm","document","getElementById","showValidationMessage","showCancelButton","confirmButtonText","showLoaderOnConfirm","allowOutsideClick","isLoading","inputValue","dismiss","createNewProject","overflowX","table","minWidth","row","getProjects","projectId","useEffect","page","setPage","rowsPerPage","setRowsPerPage","length","split","marginBottom","TableContainer","Paper","Table","TableHead","align","TableBody","map","project","key","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","setCurrentTask","taskData","createTask","createNewTask","updateProjectDetails","loadProject","taskId","deleteProject","match","params","buttonStatus","enableButton","setTasks","val","cp","border","textAlign","disabled","text","icon","confirmButtonColor","cancelButtonColor","result","task","formControl","margin","selectEmpty","loadTask","assigneeData","forEach","slice","assignees","updateTaskDetails","addAssignees","d","setErrors","deleteTask","setStatus","InputLabel","Select","labelId","placeholder","emailIds","add","goBack","jwtToken","currentTime","Date","now","exp","location","href","configure","App","Navbar","exact","path","Dashboard","Project","Task","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ac293d1.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_PROJECTS = \"SET_PROJECTS\";\nexport const SET_CURRENT_PROJECT = \"SET_CURRENT_PROJECT\";\nexport const SET_TASKS = \"SET_TASKS\";\nexport const SET_CURRENT_TASK = \"SET_CURRENT_TASK\";","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/user/signUp\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/user/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data.body;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { SET_PROJECTS,SET_CURRENT_PROJECT } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    all : [],\n    currentProject: {\n      name:\"\",\n      description:\"\",\n      duration:\"\",\n      tasks:[],\n      _id:\"\",\n      startDate:\"\",\n      admin:\"\",\n      __v:0\n    }\n}\n\nexport default function(state=initialState, action) {\n  switch (action.type) {\n    case SET_PROJECTS:\n      return {\n        ...state,\n        all:action.payload\n      };\n    case SET_CURRENT_PROJECT:\n        return {\n            ...state,\n            currentProject: action.payload\n        }\n    default:\n      return state;\n  }\n}","import { SET_TASKS,SET_CURRENT_TASK } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    all : [],\n    currentTask: {\n      name:\"\",\n      description:\"\",\n      startDate:\"\",\n      endDate:\"\",\n      status: \"\",\n      assignee:\"\"\n    }\n}\n\nexport default function(state=initialState, action) {\n  switch (action.type) {\n    case SET_TASKS:\n      return {\n        ...state,\n        all:action.payload\n      };\n    case SET_CURRENT_TASK:\n        return {\n            ...state,\n            currentTask: action.payload\n        }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport projectReducer from \"./projectReducer\";\nimport taskReducer from \"./taskReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  projects: projectReducer,\n  tasks: taskReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;","import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { logoutUser } from \"../../actions/authActions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction MenuAppBar(props) {\n  \n  const classes = useStyles();\n  \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onLogoutClick = e => {\n    e.preventDefault();\n    setAnchorEl(null);\n    props.logoutUser();\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" style={{color:\"white\"}}><i className=\"material-icons left\">TASK MANAGER</i></Link>\n          </Typography>\n          {props.auth.isAuthenticated && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={onLogoutClick}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nMenuAppBar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(MenuAppBar);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history); \n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      console.log(nextProps.errors);\n      toast.error(nextProps.errors.error,{position:toast.POSITION.TOP_RIGHT});\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n  \n  render() {\n    const { errors } = this.state;\n  return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import axios from \"axios\";\nimport {SET_PROJECTS,SET_CURRENT_PROJECT,GET_ERRORS} from \"./types\";\n\nexport const getProjects= () => dispatch=>{\n    axios.post('/api/project/all',{})\n    .then((res)=>{\n        const {projects} = res.data.body;\n        dispatch(setProjects(projects));\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n\n}\n\nexport const createNewProject = (name,description,duration,history)=> dispatch =>{\n    axios.post('/api/project/create',{name,description,duration})\n    .then((res)=>{\n        const {projectId} = res.data.body;\n        history.push(`/project/${projectId}`);\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\nexport const loadProject = (id,history)=>dispatch=>{\n    axios.post(`/api/project/${id}`,{})\n    .then((res)=>{\n        let {projectData} = res.data.body;\n        projectData = {...projectData,admin:projectData.admin.name};\n        dispatch(setCurrentProject(projectData));\n    })\n    .catch(err=>{\n        history.push('/dashboard');\n    });\n}\n\nexport const updateProjectDetails = (id,name,description,duration)=> dispatch =>{\n    axios.post('/api/project/update',{id,name,description,duration})\n    .then((res)=>{\n        let {projectData} = res.data.body;\n        projectData = {...projectData,admin:projectData.admin.name};\n        dispatch(setCurrentProject(projectData));\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\nexport const deleteProject = (id,history) => dispatch =>{\n    axios.post('/api/project/delete',{id:id})\n    .then((res)=>{\n        history.push('/dashboard');\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\nexport const setProjects = (projects)=>{\n    return {\n        type:SET_PROJECTS,\n        payload: projects\n    };\n}\n\nexport const setCurrentProject = (projectData)=>{\n    return{\n        type:SET_CURRENT_PROJECT,\n        payload:projectData\n    }\n}","import React, { Component,useState,useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getProjects,createNewProject } from \"../../actions/projectActions\";\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst onClick = (e,props) => {\n  e.preventDefault();\n  Swal.fire({\n    title: 'Create new project',\n    html:'<input id=\"name\" class=\"swal2-input\" placeholder=\"Enter name of the project\">' +\n    '<input id=\"description\" class=\"swal2-input\" placeholder=\"Enter description of the project\">'+\n    '<input id=\"duration\" class=\"swal2-input\" placeholder=\"Enter duration of the project\">',\n    inputAttributes: {\n      autocapitalize: 'off'\n    },\n    preConfirm:()=>{\n      const name = document.getElementById('name').value;\n      const description = document.getElementById('description').value;\n      const duration = document.getElementById('duration').value;\n      if(name==\"\" || description==\"\" || duration==\"\"){\n          Swal.showValidationMessage(\n              \"Enter all details\"\n          );\n      }\n    },\n    showCancelButton: true,\n    confirmButtonText: 'Create',\n    showLoaderOnConfirm: true,\n    allowOutsideClick: () => !Swal.isLoading()\n  }).then((inputValue) => {\n      if(!inputValue.dismiss){\n        const name = document.getElementById('name').value;\n        const description = document.getElementById('description').value;\n        const duration = document.getElementById('duration').value;\n        props.createNewProject(name,description,duration,props.history);\n      }\n  });\n};\n\nfunction Dashboard(props) {\n  useEffect(()=>{\n    props.getProjects();\n  },[])\n  const { user } = props.auth;\n  const {projects,classes} = props;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n      <div className=\"container valign-wrapper\">\n        {projects.length==0?\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a Task Manager{\" \"}app 👏\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"250px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={(e)=>{onClick(e,props)}}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Add Project\n            </button>\n          </div>\n        </div>:<div className=\"row\" style={{\"width\":\"100%\"}}>\n          <div className=\"col s12 center-align\">\n          <button\n              style={{\n                width: \"250px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n                marginBottom: \"1rem\",\n                backgroundColor: \"rgb(220, 0, 78)\"\n              }}\n              onClick={(e)=>{onClick(e,props)}}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Add Project\n            </button>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Duration</StyledTableCell>\n                    <StyledTableCell align=\"center\">Start Date</StyledTableCell>\n                    <StyledTableCell align=\"center\">Admin</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {projects.map(project => (\n                    <StyledTableRow key={project._id}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        <Link to={`/project/${project._id}`}>{project.name}</Link>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">{project.duration}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{project.startDate}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{project.admin.name}</StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 15]}\n              component=\"div\"\n              count={projects.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            </div>\n          </div>}\n      </div>\n    );\n}\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  getProjects: PropTypes.func.isRequired,\n  createNewProject: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  projects: state.projects.all\n});\nexport default compose( withStyles(styles), connect(\n  mapStateToProps,\n  { logoutUser,getProjects,createNewProject },\n))(Dashboard);","import axios from \"axios\";\nimport {SET_TASKS,SET_CURRENT_TASK,GET_ERRORS} from \"./types\";\n\n\nexport const createNewTask = (projectId,name,history)=> dispatch =>{\n    axios.post('/api/task/create',{projectId,name})\n    .then((res)=>{\n        const {taskId} = res.data.body;\n        history.push(`/project/${projectId}/task/${taskId}`);\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\nexport const loadTask = (id,history)=>dispatch=>{\n    axios.post(`/api/task/${id}`,{})\n    .then((res)=>{\n        let {taskData} = res.data.body;\n        let assigneeData = \"\";\n        taskData.assignee.forEach(data=>{assigneeData+=data.name+\",\"});\n        assigneeData = assigneeData.slice(0,-1);\n        taskData = {...taskData,admin:taskData.admin.name,assignees:assigneeData};\n        dispatch(setCurrentTask(taskData));\n    })\n    .catch(err=>{\n        history.push('/dashboard');\n    });\n}\n\nexport const updateTaskDetails = (task,history)=> dispatch =>{\n    axios.post(`/api/task/update`,task)\n    .then((res)=>{\n        history.push(`/project/${task.project}`);\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    })\n    \n}\n\nexport const deleteTask = (taskId,projectId,history) => dispatch =>{\n    axios.post('/api/task/delete',{id:taskId})\n    .then((res)=>{\n        history.push(`/project/${projectId}`);\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\nexport const addAssignees = (projectId,taskId,assignees) => dispatch =>{\n    axios.post('/api/task/addAssignees',{projectId,taskId,assignees})\n    .then((res)=>{\n        let {taskData} = res.data.body;\n        let assignees = \"\";\n        taskData.assignee.forEach(d=>{assignees+=d.name+\",\"});\n        assignees = assignees.slice(0,-1);\n        taskData = {...taskData,admin:taskData.admin.name,assignees:assignees};\n        dispatch(setCurrentTask(taskData));\n    })\n    .catch(err=>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        });\n    });\n}\n\n\nexport const setCurrentTask = (taskData)=>{\n    return{\n        type:SET_CURRENT_TASK,\n        payload:taskData\n    }\n}","import React, { Component,useState,useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport { updateProjectDetails,loadProject,deleteProject } from \"../../actions/projectActions\";\nimport { createNewTask } from \"../../actions/taskActions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n      marginTop: 3,\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 700,\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  });\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: \"#3f51b5\",\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  }))(TableRow);\n  \n\nconst createTask = (e,props)=>{\n    e.preventDefault();\n    Swal.fire({\n        title: 'Create new task',\n        html:'<label>Name: </label> <input id=\"taskName\" class=\"swal2-input\" required>',\n        inputAttributes: {\n          autocapitalize: 'off'\n        },\n        preConfirm:()=>{\n            const name = document.getElementById('taskName').value;\n            console.log(name);\n            if(name==\"\"){\n                Swal.showValidationMessage(\n                    \"Enter name of the task.\"\n                );\n            }\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Create',\n        showLoaderOnConfirm: true,\n        allowOutsideClick: () => !Swal.isLoading()\n      }).then((inputValue) => {\n          if(!inputValue.dismiss){\n                const name = document.getElementById('taskName').value;\n                props.createNewTask(props.currentProject._id,name,props.history);\n          }\n      });\n}\n\nfunction Project(props){\n\n    useEffect(()=>{\n        props.loadProject(props.match.params.projectId,props.history);\n    },[]);\n    const [currentProject,setCurrentProject] = useState(props.currentProject);\n    const [buttonStatus,enableButton] = useState(false);\n    const [tasks, setTasks] = useState(props.currentProject.tasks);\n    function onChange(e){\n        let target = e.target.id;\n        let val = e.target.value;\n        let cp = currentProject;\n        cp[target] = val;\n        setCurrentProject({...cp,[target]:val});\n        if(!buttonStatus) enableButton(true);\n    }\n\n    useEffect(()=>{\n        setCurrentProject(props.currentProject);\n        setTasks(props.currentProject.tasks);\n        console.log(props.currentProject);\n    },[props.currentProject]);\n\n\n    function updateProject(e){\n        props.updateProjectDetails(currentProject._id,currentProject.name,currentProject.description,currentProject.duration);\n    }\n\n    function deleteProj(e){\n        e.preventDefault();\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.value) {\n                props.deleteProject(currentProject._id,props.history);\n            }\n        })\n    }\n\n    const {projects,classes} = props;\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return(\n        <div >\n            <div className=\"container\" style={{border:\"1px solid grey\",textAlign:\"center\", borderRadius:\"8px\",marginTop:\"1rem\"}}>\n                <label style={{color:\"black\",fontSize:\"20px\"}}> Project Details\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\"></div>\n                    <form >\n                        <div className=\"input-field col s3\">\n                                <label className=\"active\" >Name</label>\n                                <input\n                                onChange={onChange}\n                                value={currentProject.name || \" \"}\n                                id=\"name\"\n                                type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s1\">\n                                <label className=\"active\" >Duration</label>\n                                <input\n                                onChange={onChange}\n                                value={currentProject.duration || \" \"}\n                                id=\"duration\"\n                                type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s5\">\n                                <label className=\"active\" >Start Date</label>\n                                <input\n                                disabled\n                                value={currentProject.startDate || \" \"}\n                                id=\"startDate\"\n                                type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s3\">\n                                <label className=\"active\" >Admin</label>\n                                <input\n                                disabled\n                                value={currentProject.admin || \" \"}\n                                id=\"startDate\"\n                                type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s12\">\n                                <label className=\"active\" >Description</label>\n                                <input\n                                onChange={onChange}\n                                value={currentProject.description || \" \"}\n                                id=\"description\"\n                                type=\"text\"\n                                />\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <button disabled={!buttonStatus && !props.auth.user.name===currentProject.admin}  onClick={updateProject} className=\"btn btn-md waves-effect waves-light hoverable blue accent-3\">\n                                Update\n                            </button>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <button disabled={!buttonStatus && !props.auth.user.name===currentProject.admin}  onClick={deleteProj} className=\"btn btn-md waves-effect waves-light hoverable red accent-3\">\n                                Delete\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                </label>\n            </div>\n            <div>\n                {currentProject.tasks.length==0?\n                    <div className=\"row\">\n                        <div className=\"col s12 center-align\">\n                        <h4>\n                            <b>Hey there,</b>\n                            <p className=\"flow-text grey-text text-darken-1\">\n                            Would you like to create first task for this project?\n                            </p>\n                        </h4>\n                        <button\n                            style={{\n                            width: \"250px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\",\n                            marginBottom:\"2rem\"\n                            }}\n                            onClick={(e)=>{createTask(e,props)}}\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                            Create Task\n                        </button>\n                        </div>        \n                    </div>:\n                    <div className=\"row\" style={{\"width\":\"100%\"}}>\n                        <div className=\"col s12 center-align\">\n                        <button\n                            style={{\n                            width: \"250px\",\n                            borderRadius: \"3px\",\n                            letterSpacing: \"1.5px\",\n                            marginTop: \"1rem\",\n                            marginBottom: \"1rem\"\n                            }}\n                            onClick={(e)=>{createTask(e,props)}}\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                        >\n                            Create Task\n                        </button>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                <StyledTableCell align=\"center\">Name</StyledTableCell>\n                                <StyledTableCell align=\"center\">Start Date</StyledTableCell>\n                                <StyledTableCell align=\"center\">End Date</StyledTableCell>\n                                <StyledTableCell align=\"center\">Status</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tasks.map(task => (\n                                <StyledTableRow key={task._id}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                    <Link to={`/project/${currentProject._id}/task/${task._id}`}>{task.name}</Link>\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"right\">{task.startDate}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{task.endDate}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{task.status}</StyledTableCell>\n                                </StyledTableRow>\n                                ))}\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={tasks.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </div>\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nProject.propTypes = {\n    auth: PropTypes.object.isRequired,\n    updateProjectDetails: PropTypes.func.isRequired,\n    loadProject: PropTypes.func.isRequired,\n    createNewTask: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    currentProject: state.projects.currentProject\n});\nexport default compose( withStyles(styles), connect(\n    mapStateToProps,\n    { updateProjectDetails,loadProject,createNewTask,deleteProject },\n))(Project);","import React, { Component,useState,useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport {compose} from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport { setErrors } from \"../../actions/errorAction\";\nimport moment from \"moment\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { loadTask,updateTaskDetails,addAssignees,deleteTask } from \"../../actions/taskActions\";\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n}));\n\nfunction add(e,props){\n    e.preventDefault();\n    Swal.fire({\n        title: 'Add Assignees',\n        html:'<label>Email Id: </label> <input id=\"addAssignees\" placeholder=\"Add email ids separated by comma(,)\" class=\"swal2-input\" required>',\n        inputAttributes: {\n          autocapitalize: 'off'\n        },\n        preConfirm:()=>{\n            const name = document.getElementById('addAssignees').value;\n            if(name==\"\"){\n                Swal.showValidationMessage(\n                    \"Enter valid mail id.\"\n                );\n            }\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Create',\n        showLoaderOnConfirm: true,\n        allowOutsideClick: () => !Swal.isLoading()\n      }).then((inputValue) => {\n          if(!inputValue.dismiss){\n                const emailIds = document.getElementById('addAssignees').value;\n                props.addAssignees(props.currentTask.project,props.currentTask._id,emailIds);\n          }\n      }).catch(err=>{\n          console.log(err);\n      });\n}\n\n\nfunction goBack(e,props){\n    props.history.push(`/project/${props.currentTask.project}/`);\n}\n\nfunction Task(props){\n    const classes = useStyles();\n    useEffect(()=>{\n        props.loadTask(props.match.params.taskId,props.history);\n    },[]);\n    const [currentTask,setCurrentTask] = useState(props.currentTask);\n    const [status,setStatus] = useState(props.currentTask.status);\n    const [buttonStatus,enableButton] = useState(false);\n\n    function onChange(e){\n        let target = e.target.id;\n        let val = e.target.value;\n        if(target!=\"assignee\"){\n            setCurrentTask({...currentTask,[target]:val});\n        }\n        if(!buttonStatus) enableButton(true);\n    }\n\n    function updateStatus(e){\n        let target = e.target.id;\n        let val = e.target.value;\n        if(!buttonStatus) enableButton(true);\n        setStatus(e.target.value);\n        setCurrentTask({...currentTask,[\"status\"]:val});\n    }\n\n    useEffect(()=>{\n        setCurrentTask(props.currentTask);\n        setStatus(props.currentTask.status);\n    },[props.currentTask]);\n\n    useEffect(()=>{\n        if(props.errors.response){\n            toast.error(props.errors.response.data.error,{position:toast.POSITION.TOP_RIGHT});\n            props.setErrors({});\n        }\n        \n    },[props.errors])\n\n    function callUpdateTask(e){\n        e.preventDefault();\n        props.updateTaskDetails(currentTask,props.history);\n    }\n\n    function callDeleteTask(e){\n        e.preventDefault();\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.value) {\n                props.deleteTask(currentTask._id,currentTask.project,props.history);\n            }\n        })\n        \n    }\n\n    return(\n        <div >\n            <div className=\"container\" style={{border:\"1px solid grey\",textAlign:\"center\", borderRadius:\"8px\",marginTop:\"1rem\"}}>\n                <label style={{color:\"black\",fontSize:\"20px\"}}> Task Details\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\"></div>\n                    <form >\n                        <div className=\"input-field col s4\">\n                                <label className=\"active\" >Name</label>\n                                <input\n                                    onChange={onChange}\n                                    value={currentTask.name || \" \"}\n                                    id=\"name\"\n                                    type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s4\">\n                                <label className=\"active\">Admin</label>\n                                <input\n                                    disabled\n                                    value={currentTask.admin || \" \"}\n                                    id=\"startDate\"\n                                    type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s4\">\n                                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value={status}\n                                    onChange={updateStatus}\n                                >\n                                    <MenuItem value={\"to-do\"}>To Do</MenuItem>\n                                    <MenuItem value={\"in-progress\"}>In Progress</MenuItem>\n                                    <MenuItem value={\"completed\"}>Completed</MenuItem>\n                                </Select>\n                        </div>\n                        <div className=\"input-field col s6\">\n                                <label className=\"active\">Start Date</label>\n                                <input\n                                    onChange={onChange}\n                                    value={currentTask.startDate || \" \"}\n                                    id=\"startDate\"\n                                    type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s6\">\n                                <label className=\"active\">End Date</label>\n                                <input\n                                    onChange={onChange}\n                                    value={currentTask.endDate || \" \"}\n                                    id=\"endDate\"\n                                    type=\"text\"\n                                />\n                            \n                        </div>\n                        <div className=\"input-field col s12\">\n                                <label className=\"active\" >Description</label>\n                                <input\n                                onChange={onChange}\n                                value={currentTask.description || \" \"}\n                                placeholder=\"Task Description\"\n                                id=\"description\"\n                                type=\"text\"\n                                />\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <label className=\"active\">Assignees</label>\n                            <input\n                                value = {currentTask.assignees || \" \"}\n                                onChange={onChange}\n                                placeholder=\"Assignees\"\n                                id=\"assignee\"\n                                type=\"text\"\n                            />\n                            \n                        </div>\n                        <div className=\"input-field col s3\">\n                            <button disabled={!buttonStatus}  onClick={callUpdateTask} className=\"btn btn-md waves-effect waves-light hoverable blue accent-3\">\n                                Update\n                            </button>\n                        </div>\n                        <div className=\"input-field col s3\">\n                            <button   onClick={callDeleteTask} className=\"btn btn-md waves-effect waves-light hoverable red accent-3\">\n                                Delete\n                            </button>\n                        </div>\n                        <div className=\"input-field col s3\">\n                            <button  onClick={(e)=>{add(e,props)}} className=\"btn btn-md waves-effect waves-light hoverable blue accent-3\">\n                                Add Assignees\n                            </button>\n                        </div>\n                        <div className=\"input-field col s3\">\n                            <button  onClick={(e)=>{goBack(e,props)}} className=\"btn btn-md waves-effect waves-light hoverable blue accent-3\">\n                                Go Back\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                </label>\n            </div>\n        </div>\n    )\n}\n\nTask.propTypes = {\n    auth: PropTypes.object.isRequired,\n    updateTaskDetails: PropTypes.func.isRequired,\n    addAssignees: PropTypes.func.isRequired,\n    loadTask: PropTypes.func.isRequired,\n    setErrors: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors,\n    currentTask: state.tasks.currentTask\n});\nexport default connect(\n    mapStateToProps,\n    { loadTask,updateTaskDetails,addAssignees,setErrors,deleteTask },\n)(Task);","import {GET_ERRORS} from \"./types\";\n\nexport const setErrors = (payload) => dispatch =>{\n    dispatch({\n        type: GET_ERRORS,\n        payload: payload\n    });\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Project from \"./components/project/Project\";\nimport Task from \"./components/task/Task\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\ntoast.configure();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/project/:projectId\" component={Project} />\n              <PrivateRoute exact path=\"/project/:projectId/task/:taskId\" component={Task} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}